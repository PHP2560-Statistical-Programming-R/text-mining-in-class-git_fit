#group by chapter
group_by(chapter)%>%
#count the words and sort by most used
count(word, sort=TRUE)%>%
#top word for each chapter
top_n(1)%>%
#arrange by chapter
arrange(chapter)
common_words
#Q2:What are the most common words by chapter
common_words<-books%>%
#filter for the book in series
filter(title =="order_of_the_phoenix")%>%
#eliminate the stop words
anti_join(stop_words)%>%
#group by chapter
group_by(chapter)%>%
#count the words and sort by most used
count(word, sort=TRUE)%>%
#top word for each chapter
top_n(5)%>%
#arrange by chapter
arrange(chapter)
common_words
library(harrypotter)
?harrypotter
#How the sentiment changes across the entire book
#What are the most common words by chapter
#Which characters appear the most
#How the emotion anticipation changes throughout the book
#Word count for each book
library(tidytext)
library(plyr)
library(dplyr)
library(stringr)
library(ggplot2)
library(rebus)
#clean the data
#make a list of book names
book_names <- list(philosophers_stone, chamber_of_secrets, prisoner_of_azkaban, goblet_of_fire, order_of_the_phoenix, half_blood_prince, deathly_hallows)
#concatenate a vector of names
names(book_names) <- c("philosophers_stone", "chamber_of_secrets", "prisoner_of_azkaban", "goblet_of_fire", "order_of_the_phoenix", "half_blood_prince", "deathly_hallows")
books = vector(mode = "list", length = 7)
#create a for loop to go through the chapters of the books and unnest the text into words
for(i in 1:length(books)){
data <- data_frame(text = book_names[[i]])
data <- mutate(data, chapter = c(1:nrow(data)), title = names(book_names)[i])
data <- data %>%
unnest_tokens(word, text, to_lower = TRUE)
books[[i]] <- data
}
#new dataset books
books <- ldply(books, data.frame)
#word count for each book
chapter_words<-books%>%
filter(title == "order_of_the_phoenix")%>%
group_by(chapter)%>%
count()
chapter_words%>%
ungroup()%>%
mutate(total_words=sum(n))
#Q1:How the sentiment changes across the entire book
senti <- books %>%
filter(title == "order_of_the_phoenix") %>%
inner_join(get_sentiments("bing"))%>%
group_by(chapter)%>%
count(sentiment)
total_p<-senti%>%
ungroup()%>%
filter(sentiment=="positive")%>%
mutate(total_positive=sum(n), percent=n/total_positive)
total_p
total_n<-senti%>%
ungroup()%>%
filter(sentiment=="negative")%>%
mutate(total_negative=sum(n), percent=n/total_negative)
total_n
#Q2:What are the most common words by chapter
common_words<-books%>%
#filter for the book in series
filter(title =="order_of_the_phoenix")%>%
#eliminate the stop words
anti_join(stop_words)%>%
#group by chapter
group_by(chapter)%>%
#count the words and sort by most used
count(word, sort=TRUE)%>%
#top word for each chapter
top_n(5)%>%
#arrange by chapter
arrange(chapter)
common_words
#Q2:What are the most common words by chapter
common_words<-books%>%
#filter for the book in series
filter(title =="order_of_the_phoenix")%>%
#eliminate the stop words
anti_join(stop_words)%>%
#group by chapter
#count the words and sort by most used
count(word, sort=TRUE)%>%
#top word for each chapter
top_n(5)%>%
#arrange by chapter
arrange(chapter)
#Q2:What are the most common words by chapter
common_words<-books%>%
#filter for the book in series
filter(title =="order_of_the_phoenix")%>%
#eliminate the stop words
anti_join(stop_words)%>%
#group by chapter
group_by(chapter)%>%
#count the words and sort by most used
count(word, sort=TRUE)%>%
#top word for each chapter
top_n(5)%>%
#arrange by chapter
arrange(chapter)
common_words
#Q2:What are the most common words by chapter
common_words<-books%>%
#filter for the book in series
filter(title =="order_of_the_phoenix")%>%
#eliminate the stop words
anti_join(stop_words)%>%
#group by chapter
group_by(chapter)%>%
#count the words and sort by most used
count(word, sort=TRUE)%>%
#top word for each chapter
top_n(5)%>%
#arrange by chapter
arrange(chapter)
common_words
ggplot(common_words,aes(x=chapter))+
geom_bar(aes(fill=count(word))) +
ggtitle("Common Words Per Chapter in Order of the Phoenix")
#Q2:What are the most common words by chapter
common_words<-books%>%
#filter for the book in series
filter(title =="order_of_the_phoenix")%>%
#eliminate the stop words
anti_join(stop_words)%>%
#group by chapter
group_by(chapter)%>%
#count the words and sort by most used
count(word, sort=TRUE)%>%
#top word for each chapter
top_n(5)%>%
#arrange by chapter
arrange(chapter)
common_words
ggplot(common_words,aes(x=chapter, y=word()))+
geom_bar(aes(fill=count(word))) +
ggtitle("Common Words Per Chapter in Order of the Phoenix")
#Q2:What are the most common words by chapter
common_words<-books%>%
#filter for the book in series
filter(title =="order_of_the_phoenix")%>%
#eliminate the stop words
anti_join(stop_words)%>%
#group by chapter
group_by(chapter)%>%
#count the words and sort by most used
count(word, sort=TRUE)%>%
#top word for each chapter
top_n(5)%>%
#arrange by chapter
arrange(chapter)
common_words
ggplot(common.words, aes(word, n, fill = chapter))+ # I am making a plot that fills in the bar with the sentiment
geom_col(show.legend=FALSE)+ # this makes columns and excludes the legend
facet_wrap(~chapter, scales="free") + # this feature tells R to make this graph for each sentiment
coord_flip()+ # flip the x and y axis
ggtitle("Common Words Per Chapter in Order of the Phoenix")
#Q2:What are the most common words by chapter
common_words<-books%>%
#filter for the book in series
filter(title =="order_of_the_phoenix")%>%
#eliminate the stop words
anti_join(stop_words)%>%
#group by chapter
group_by(chapter)%>%
#count the words and sort by most used
count(word, sort=TRUE)%>%
#top word for each chapter
top_n(5)%>%
#arrange by chapter
arrange(chapter)
common_words
ggplot(common_words, aes(word, n, fill = chapter))+ # I am making a plot that fills in the bar with the sentiment
geom_col(show.legend=FALSE)+ # this makes columns and excludes the legend
facet_wrap(~chapter, scales="free") + # this feature tells R to make this graph for each sentiment
coord_flip()+ # flip the x and y axis
ggtitle("Common Words Per Chapter in Order of the Phoenix")
#Q2:What are the most common words by chapter
common_words<-books%>%
#filter for the book in series
filter(title =="order_of_the_phoenix")%>%
#eliminate the stop words
anti_join(stop_words)%>%
#group by chapter
group_by(chapter)%>%
#count the words and sort by most used
count(word, sort=TRUE)%>%
#top word for each chapter
top_n(5)%>%
#arrange by chapter
arrange(chapter)
common_words
ggplot(common_words, aes(word, n, fill = chapter))+ # I am making a plot that fills in the bar with the most common words
geom_col(show.legend=FALSE)+ # this makes columns and excludes the legend
facet_wrap(~chapter, scales="free") + # this feature tells R to make this graph for each chapter
coord_flip()+ # flip the x and y axis
ggtitle("Common Words Per Chapter in Order of the Phoenix")
common_words<-books%>%
#filter for the book in series
filter(title =="order_of_the_phoenix")%>%
#eliminate the stop words
anti_join(stop_words)%>%
#group by chapter
group_by(chapter)%>%
#count the words and sort by most used
count(word, sort=TRUE)%>%
#top word for each chapter
top_n(5)%>%
#arrange by chapter
arrange(chapter)
books%>%
#filter for the book in series
filter(title =="order_of_the_phoenix")%>%
#eliminate the stop words
anti_join(stop_words)%>%
#group by chapter
group_by(chapter)%>%
#count the words and sort by most used
count(word, sort=TRUE)%>%
#top word for each chapter
top_n(5)%>%
#arrange by chapter
arrange(chapter)
ggplot(common_words, aes(word, n, fill = chapter))+ # I am making a plot that fills in the bar with the most common words
geom_col(show.legend=FALSE)+ # this makes columns and excludes the legend
facet_wrap(~chapter, scales="free") + # this feature tells R to make this graph for each chapter
coord_flip()
common_words<-books%>%
#filter for the book in series
filter(title =="order_of_the_phoenix")%>%
#eliminate the stop words
anti_join(stop_words)%>%
#group by chapter
group_by(chapter)%>%
#count the words and sort by most used
count(word, sort=TRUE)%>%
#top word for each chapter
top_n(5)%>%
#arrange by chapter
arrange(chapter)
common_words
ggplot(common_words, aes(word, n, fill = chapter))+ # I am making a plot that fills in the bar with the most common words
geom_col(show.legend=FALSE)+ # this makes columns and excludes the legend
facet_wrap(~chapter, scales="free") + # this feature tells R to make this graph for each chapter
coord_flip()+ # flip the x and y axis
ggtitle("Common Words Per Chapter in Order of the Phoenix")
ggplot(common_words, aes(word, n, fill = chapter))+ # I am making a plot that fills in the bar with the most common words
geom_col(show.legend=FALSE)+ # this makes columns and excludes the legend
facet_wrap(~chapter, scales="free") + # this feature tells R to make this graph for each chapter
coord_flip()+ # flip the x and y axis
ggtitle("Common Words Per Chapter in Order of the Phoenix")
common_words2 <- common_words %>%
filter(chapter %in% c(1,5))
ggplot(common_words2, aes(word, n, fill = chapter))+ # I am making a plot that fills in the bar with the most common words
geom_col(show.legend=FALSE)+ # this makes columns and excludes the legend
facet_wrap(~chapter, scales="free") + # this feature tells R to make this graph for each chapter
coord_flip()+ # flip the x and y axis
ggtitle("Common Words Per Chapter in Order of the Phoenix")
common_words2 <- common_words %>%
filter(chapter %in% c(1:10))
ggplot(common_words2, aes(word, n, fill = chapter))+ # I am making a plot that fills in the bar with the most common words
geom_col(show.legend=FALSE)+ # this makes columns and excludes the legend
facet_wrap(~chapter, scales="free") + # this feature tells R to make this graph for each chapter
coord_flip()+ # flip the x and y axis
ggtitle("Common Words Per Chapter in Order of the Phoenix")
common_words2 <- common_words %>%
filter(chapter %in% c(1:20))
ggplot(common_words2, aes(word, n, fill = chapter))+ # I am making a plot that fills in the bar with the most common words
geom_col(show.legend=FALSE)+ # this makes columns and excludes the legend
facet_wrap(~chapter, scales="free") + # this feature tells R to make this graph for each chapter
coord_flip()+ # flip the x and y axis
ggtitle("Common Words Per Chapter in Order of the Phoenix")
#Q2:What are the most common words by chapter
common_words<-books%>%
#filter for the book in series
filter(title =="order_of_the_phoenix")%>%
#eliminate the stop words
anti_join(stop_words)%>%
#group by chapter
group_by(chapter)%>%
#count the words and sort by most used
count(word, sort=TRUE)%>%
#top word for each chapter
top_n(5)%>%
#arrange by chapter
arrange(chapter)
common_words
common_words2 <- common_words %>%
filter(chapter %in% c(1:15))
ggplot(common_words2, aes(word, n, fill = chapter))+ # I am making a plot that fills in the bar with the most common words
geom_col(show.legend=FALSE)+ # this makes columns and excludes the legend
facet_wrap(~chapter, scales="free") + # this feature tells R to make this graph for each chapter
coord_flip()+ # flip the x and y axis
ggtitle("Common Words Per Chapter in Order of the Phoenix")
#Q2:What are the most common words by chapter
common_words<-books%>%
#filter for the book in series
filter(title =="order_of_the_phoenix")%>%
#eliminate the stop words
anti_join(stop_words)%>%
#group by chapter
group_by(chapter)%>%
#count the words and sort by most used
count(word, sort=TRUE)%>%
#top word for each chapter
top_n(5)%>%
#arrange by chapter
arrange(chapter)
common_words
common_words2 <- common_words %>%
filter(chapter %in% c(1:12))
ggplot(common_words2, aes(word, n, fill = chapter))+ # I am making a plot that fills in the bar with the most common words
geom_col(show.legend=FALSE)+ # this makes columns and excludes the legend
facet_wrap(~chapter, scales="free") + # this feature tells R to make this graph for each chapter
coord_flip()+ # flip the x and y axis
ggtitle("Common Words Per Chapter in Order of the Phoenix")
#Q2:What are the most common words by chapter
common_words<-books%>%
#filter for the book in series
filter(title =="order_of_the_phoenix")%>%
#eliminate the stop words
anti_join(stop_words)%>%
#group by chapter
group_by(chapter)%>%
#count the words and sort by most used
count(word, sort=TRUE)%>%
#top word for each chapter
top_n(3)%>%
#arrange by chapter
arrange(chapter)
common_words
common_words2 <- common_words %>%
filter(chapter %in% c(1:12))
ggplot(common_words2, aes(word, n, fill = chapter))+ # I am making a plot that fills in the bar with the most common words
geom_col(show.legend=FALSE)+ # this makes columns and excludes the legend
facet_wrap(~chapter, scales="free") + # this feature tells R to make this graph for each chapter
coord_flip()+ # flip the x and y axis
ggtitle("Common Words Per Chapter in Order of the Phoenix")
#Q2:What are the most common words by chapter
common_words<-books%>%
#filter for the book in series
filter(title =="order_of_the_phoenix")%>%
#eliminate the stop words
anti_join(stop_words)%>%
#group by chapter
group_by(chapter)%>%
#count the words and sort by most used
count(word, sort=TRUE)%>%
#top word for each chapter
top_n(3)%>%
#arrange by chapter
arrange(chapter)
common_words
common_words2 <- common_words %>%
filter(chapter %in% c(1:15))
ggplot(common_words2, aes(word, n, fill = chapter))+ # I am making a plot that fills in the bar with the most common words
geom_col(show.legend=FALSE)+ # this makes columns and excludes the legend
facet_wrap(~chapter, scales="free") + # this feature tells R to make this graph for each chapter
coord_flip()+ # flip the x and y axis
ggtitle("Common Words Per Chapter in Order of the Phoenix")
#Q2:What are the most common words by chapter
common_words<-books%>%
#filter for the book in series
filter(title =="order_of_the_phoenix")%>%
#eliminate the stop words
anti_join(stop_words)%>%
#group by chapter
group_by(chapter)%>%
#count the words and sort by most used
count(word, sort=TRUE)%>%
#top word for each chapter
top_n(3)%>%
#arrange by chapter
arrange(chapter)
common_words
common_words2 <- common_words %>%
filter(chapter %in% c(1:15))
ggplot(common_words2, aes(word, n, fill = chapter))+ # I am making a plot that fills in the bar with the most common words
geom_col(show.legend=FALSE)+ # this makes columns and excludes the legend
facet_wrap(~chapter, scales="free") + # this feature tells R to make this graph for each chapter
coord_flip()+ # flip the x and y axis
ggtitle("Common Words Per Chapter in Order of the Phoenix")
common_words3 <- common_words %>%
filter(chapter %in% c(16:30))
ggplot(common_words3, aes(word, n, fill = chapter))+ # I am making a plot that fills in the bar with the most common words
geom_col(show.legend=FALSE)+ # this makes columns and excludes the legend
facet_wrap(~chapter, scales="free") + # this feature tells R to make this graph for each chapter
coord_flip()+ # flip the x and y axis
ggtitle("Common Words Per Chapter in Order of the Phoenix")
#Q2:What are the most common words by chapter
common_words<-books%>%
#filter for the book in series
filter(title =="order_of_the_phoenix")%>%
#eliminate the stop words
anti_join(stop_words)%>%
#group by chapter
group_by(chapter)%>%
#count the words and sort by most used
count(word, sort=TRUE)%>%
#top word for each chapter
top_n(3)%>%
#arrange by chapter
arrange(chapter)
common_words
common_words2 <- common_words %>%
filter(chapter %in% c(1:15))
ggplot(common_words2, aes(word, n, fill = chapter))+ # I am making a plot that fills in the bar with the most common words
geom_col(show.legend=FALSE)+ # this makes columns and excludes the legend
facet_wrap(~chapter, scales="free") + # this feature tells R to make this graph for each chapter
coord_flip()+ # flip the x and y axis
ggtitle("Common Words Per Chapter in Order of the Phoenix")
common_words3 <- common_words %>%
filter(chapter %in% c(16:30))
ggplot(common_words3, aes(word, n, fill = chapter))+ # I am making a plot that fills in the bar with the most common words
geom_col(show.legend=FALSE)+ # this makes columns and excludes the legend
facet_wrap(~chapter, scales="free") + # this feature tells R to make this graph for each chapter
coord_flip()+ # flip the x and y axis
ggtitle("Common Words Per Chapter in Order of the Phoenix")
common_words4 <- common_words %>%
filter(chapter %in% c(31:38))
ggplot(common_words4, aes(word, n, fill = chapter))+ # I am making a plot that fills in the bar with the most common words
geom_col(show.legend=FALSE)+ # this makes columns and excludes the legend
facet_wrap(~chapter, scales="free") + # this feature tells R to make this graph for each chapter
coord_flip()+ # flip the x and y axis
ggtitle("Common Words Per Chapter in Order of the Phoenix")
#Q1:How the sentiment changes across the entire book
senti <- books %>%
filter(title == "order_of_the_phoenix") %>%
inner_join(get_sentiments("bing"))%>%
group_by(chapter)%>%
count(sentiment)
total_p<-senti%>%
ungroup()%>%
filter(sentiment=="positive")%>%
mutate(total_positive=sum(n), percent=n/total_positive)
total_p
total_n<-senti%>%
ungroup()%>%
filter(sentiment=="negative")%>%
mutate(total_negative=sum(n), percent=n/total_negative)
total_n
ggplot(total_p, aes(x=chapter,y=percent))+
geom_line(aes(fill=sentiment))+
ggtitle("Sentiment Change Per Chapter in Order of the Phoenix")
#Q1:How the sentiment changes across the entire book
senti <- books %>%
filter(title == "order_of_the_phoenix") %>%
inner_join(get_sentiments("afin"))%>%
group_by(chapter)%>%
summarise(n= sum(score))
total_p<-senti%>%
ungroup()%>%
filter(sentiment=="positive")%>%
mutate(total_positive=sum(n), percent=n/total_positive)
sentiments<- books%>%
filter (book == "order_of_the_phoenix") %>%
inner_join(get_sentiments("afinn")) %>%
group_by(chapter) %>%
summarise(n= sum(score))
sentiments<- books%>%
filter (title == "order_of_the_phoenix") %>%
inner_join(get_sentiments("afinn")) %>%
group_by(chapter) %>%
summarise(n= sum(score))
sentiments
#Q1:How the sentiment changes across the entire book
sentiments<- books%>%
filter (title == "order_of_the_phoenix") %>%
inner_join(get_sentiments("afinn")) %>%
group_by(chapter) %>%
summarise(n= sum(score))
sentiments
p1 <- ggplot(sentiments, aes(x=chapter, y=n)) +
geom_line(show.legend = FALSE, size = 0.3) +
scale_color_brewer(palette = "Set1") +
geom_smooth(se=FALSE, size = 0.2, linetype = 4)
#Q1:How the sentiment changes across the entire book
sentiments<- books%>%
filter (title == "order_of_the_phoenix") %>%
inner_join(get_sentiments("afinn")) %>%
group_by(chapter) %>%
summarise(n= sum(score))
sentiments
p1 <- ggplot(sentiments, aes(x=chapter, y=n)) +
geom_line(show.legend = FALSE, size = 0.3) +
scale_color_brewer(palette = "Set1") +
geom_smooth(se=FALSE, size = 0.2, linetype = 4)
p1+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.line = element_line(colour = "black") )+
xlim(1, 38) +
scale_x_continuous(
breaks = c(1:38)) +
geom_hline(yintercept = 0)
